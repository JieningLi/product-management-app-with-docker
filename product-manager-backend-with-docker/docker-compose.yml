version: "3.9"

services:
  db:
    image: postgres:16
    container_name: product-db
    environment:
      POSTGRES_DB: productdb_docker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d productdb_docker"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

  backend:
    # If your Spring Boot project has a Dockerfile in the root:
    build: .
    container_name: product-backend
    environment:
      # Same values as your local props, but pointing to the service name "db"
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/productdb_docker
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SERVER_PORT: 8080
      # CORS (Spring env mapping: dots -> underscores)
      SPRING_WEB_CORS_ALLOWED_ORIGINS: http://localhost:3000
      SPRING_WEB_CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE,OPTIONS
      SPRING_WEB_CORS_ALLOWED_HEADERS: "*"
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - app-net

volumes:
  pgdata:

networks:
  app-net:
